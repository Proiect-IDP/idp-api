version: '3.3'

x-db_credentials: &weather-db-credentials
  MONGO_INITDB_ROOT_USERNAME: weather_api_admin
  MONGO_INITDB_ROOT_PASSWORD: weather_api_pass

x-users_credentials: &users-db-credentials
  MONGO_INITDB_USERS_ROOT_USERNAME: users_admin
  MONGO_INITDB_USERS_ROOT_PASSWORD: users_pass

services:
  business-logic:
    image: meduard/business-logic:latest
    networks:
      - business_grafana
      - business_auth
      - main
      - business_kong
    ports:
      - 5000:5000
    depends_on:
      - io-service
    restart: always
    environment:
      <<: *weather-db-credentials
      MONGO_HOST: weather-db
      MONGO_PORT: 27017
      DB_NAME: weather_data

  auth-service:
    image: meduard/auth-service:latest
    networks:
      - business_kong
    ports:
      - 4000:4000
    restart: always

  prediction-service:
    image: meduard/prediction-service:latest
    networks:
      - main
    ports:
      - 7000:7000
    restart: always

  io-service:
    image: meduard/io-service:latest
    deploy:
      placement:
          constraints: [node.role == manager]
    networks:
      - main
      - io_db
    ports:
      - 6001:5000
    depends_on:
      - weather-db
    restart: always
    environment:
      <<: *weather-db-credentials
      MONGO_HOST: weather-db
      MONGO_PORT: 27017
      DB_NAME: weather_data

  weather-db:
    image: mongo:latest
    container_name: mongo-server
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - express_db
      - io_db
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
    restart: always
    environment: *weather-db-credentials

  kong:
    image: kong:latest
    volumes:
      - ./kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 80:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - business_kong
      - express_db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    networks:
      - express_db
    ports:
      - 8111:8081
    depends_on:
      - weather-db
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo-server
      ME_CONFIG_MONGODB_ADMINUSERNAME: weather_api_admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: weather_api_pass
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password

volumes:
  db_data: {}

networks:
  main:
    name: main_network
  io_db:
    name: io_db_network
  express_db:
    name: express_db_network
  business_grafana:
    name: business_grafana_network
  business_auth:
    name: business_auth_network
  business_kong:
    name: business_kong_network